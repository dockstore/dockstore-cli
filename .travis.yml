services:
- docker
- postgresql

addons:
  postgresql: "11"

cache:
  directories:
  - /tmp/localstack_install_dir
  - $HOME/.cache/pip
  - $HOME/.m2/repository
  - $HOME/apache-maven-3.6.2

os: linux
dist: bionic
language: java
jdk: openjdk12

env:
  - TESTING_PROFILE=unit-tests

jobs:
  include:
    - stage: unit-tests
      script: mvn --batch-mode clean install -P$TESTING_PROFILE

    - stage: coverage
      script: mvn --batch-mode clean install jacoco:report jacoco:report-aggregate coveralls:report -P$TESTING_PROFILE,coverage
    - stage: coverage
      env:
        - TESTING_PROFILE=confidential-tool-tests
      script: mvn --batch-mode clean install jacoco:report-integration jacoco:report-aggregate coveralls:report -P$TESTING_PROFILE,coverage -DskipITs=false
    - stage: coverage
      env:
        - TESTING_PROFILE=confidential-workflow-tests
      script: mvn --batch-mode clean install jacoco:report-integration jacoco:report-aggregate coveralls:report -P$TESTING_PROFILE,coverage -DskipITs=false
    - stage: coverage
      env:
        - TESTING_PROFILE=non-confidential-tests
      script: mvn --batch-mode clean install jacoco:report-integration jacoco:report-aggregate coveralls:report -P$TESTING_PROFILE,coverage -DskipITs=false

# not feeling the bang-for-the-buck for these, running only in release branch
#    - stage: coverage
#      script: mvn --batch-mode clean install jacoco:report-integration jacoco:report-aggregate coveralls:report -P$TESTING_PROFILE,coverage -DskipClientITs=true
#      if: branch = master OR branch =~ /^release.*$/
#      env:
#        - TESTING_PROFILE=toil-integration-tests
    - stage: coverage
      script: mvn --batch-mode clean install jacoco:report-integration jacoco:report-aggregate coveralls:report -P$TESTING_PROFILE,coverage -DskipClientITs=true
      env:
        - TESTING_PROFILE=regression-integration-tests
      if: branch = master OR branch =~ /^release.*$/

    - stage: coverage
      env:
        - TESTING_PROFILE=singularity-tests
      script: mvn --batch-mode clean install jacoco:report-integration jacoco:report-aggregate coveralls:report -P$TESTING_PROFILE,coverage -DskipClientITs=true

# build lifecycle is before_install, install, before_script, script, before_cache, after_success/after_failure, after_script

before_install:
- export M2_HOME=$HOME/apache-maven-3.6.2
- if [ ! -d $M2_HOME/bin ]; then curl https://archive.apache.org/dist/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz | tar zxf - -C $HOME; fi
- export PATH=$M2_HOME/bin:$PATH
# see https://www.deps.co/guides/travis-ci-latest-java/
- if [ -e $JAVA_HOME/lib/security/cacerts ]; then sudo rm $JAVA_HOME/lib/security/cacerts && sudo ln -s /etc/ssl/certs/java/cacerts $JAVA_HOME/lib/security/cacerts; fi
# need to clear out old version of the plugin till everything is merged due to https://github.com/maven-download-plugin/maven-download-plugin/issues/80
- rm -Rf $HOME/.m2/repository/.cache/download-maven-plugin/
# turn this back on when npm settles down/we find a swagger2openapi replacement
#- npm install -g swagger2openapi@2.11.16
# decrypt migration before initial build
- scripts/decrypt.sh
# codacy hookup
- sudo apt-get install jq
- wget --no-verbose -O ~/codacy-coverage-reporter-assembly-latest.jar https://github.com/codacy/codacy-coverage-reporter/releases/download/4.0.5/codacy-coverage-reporter-4.0.5-assembly.jar
- pyenv global 3.6.10

install:
- docker version
- scripts/install-tests.sh

before_script:
- psql -c "create user dockstore with password 'dockstore' createdb;" -U postgres
- psql -c 'create database webservice_test with owner = dockstore;' -U postgres
- export PATH=$PATH:$PWD/dockstore-client/target
# debug by double checking versions of stuff
- mvn -version
- echo $JAVA_HOME

before_cache:
- rm -rf /home/travis/.m2/repository/io/dockstore
- rm -rf $HOME/.m2/repository/.cache/download-maven-plugin directory

after_success:
- bash <(curl -s https://codecov.io/bash) -F ${TESTING_PROFILE//-} || echo "Codecov did not collect coverage reports"
- java -jar ~/codacy-coverage-reporter-assembly-latest.jar report -l Java -r reports/target/site/jacoco-aggregate/jacoco.xml 
  
notifications:
  webhooks: https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN
