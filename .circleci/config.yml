version: 2
jobs:
  build: # runs not using Workflows must have a `build` job as entry point
    resource_class: medium+
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.4-jdk-stretch
        environment:
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dockstore-java-{{ checksum "pom.xml" }}
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Install postgresql client
          command: |
            sudo rm -rf /var/lib/apt/lists/*
            sudo apt update
            sudo apt install -y postgresql-client
      - run:
          name: setup postgres
          command: |
            psql -c "create user dockstore with password 'dockstore' createdb;" -U postgres
            psql -c "ALTER USER dockstore WITH superuser;" -U postgres
            psql -c 'create database webservice_test with owner = dockstore;' -U postgres
      - run:
          name: run the actual tests
          command: |
            mvn --batch-mode clean install -Punit-tests
      - run:
          name: clean the cache
          command: |
            rm -rf ~/.m2/repository/io/dockstore
            rm -rf ~/.m2/repository/.cache/download-maven-plugin directory
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: dockstore-java-{{ checksum "pom.xml" }}
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
    branches:
      ignore:
        - gh-pages
